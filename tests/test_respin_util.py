from repESP.types import *
from repESP.respin_util import Respin, _parse_respin, _write_respin

from my_unittest import TestCase

from io import StringIO


class TestRespin(TestCase):

    def setUp(self) -> None:

        self.respin = Respin(
            title="RESP input of type '2' generated by the repESP program",
            cntrl=Respin.Cntrl(
                nmol=1,
                ihfree=1,
                ioutopt=1,
                qwt=0.001,
                iqopt=2
            ),
            wtmol=1.0,
            subtitle="Resp charges for organic molecule",
            charge=0,
            iuniq=5,
            atomic_numbers=[6, 1, 1, 1, 1],
            ivary=Respin.Ivary([0, 0, 2, 2, 2])
        )


    def test_parsing(self) -> None:
        with open("tests/test_respin_util.respin") as f:
            parsed_respin = _parse_respin(f)
        self.assertAlmostEqualRecursive(self.respin, parsed_respin)

    def test_writing(self) -> None:
        written = StringIO()
        _write_respin(written, self.respin)
        written.seek(0)

        with open("tests/test_respin_util.respin") as f:
            self.assertListEqual(f.readlines(), written.readlines())

    def test_ivary_description(self) -> None:

        output = StringIO()
        expected_lines = [
            "Atom number 1\n",
            "Atom number 2\n",
            "Atom number 3, equivalenced to atom 2\n",
            "Atom number 4, equivalenced to atom 2\n",
            "Atom number 5, equivalenced to atom 2\n",
        ]

        self.respin.ivary.describe(file=output)
        output.seek(0)
        self.assertListEqual(expected_lines, output.readlines())

    def test_ivary_description_with_molecule(self) -> None:

        output = StringIO()
        expected_lines = [
            "Atom (C) number 1\n",
            "Atom (H) number 2\n",
            "Atom (H) number 3, equivalenced to atom 2\n",
            "Atom (H) number 4, equivalenced to atom 2\n",
            "Atom (H) number 5, equivalenced to atom 2\n",
        ]

        self.respin.ivary.describe(atomic_numbers=[6, 1, 1, 1, 1], file=output)
        output.seek(0)
        self.assertListEqual(expected_lines, output.readlines())
